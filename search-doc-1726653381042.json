{"searchDocs":[{"title":"Présentation de soi.","type":0,"sectionRef":"#","url":"/blog/about/about_fr","content":"","keywords":"","version":null},{"title":"Bonjour!​","type":1,"pageTitle":"Présentation de soi.","url":"/blog/about/about_fr#bonjour","content":" Bienvenue sur ma page d'accueil personnelle, et je suis heureux de rencontrer une âme aussi intéressante que vous.  ","version":null,"tagName":"h2"},{"title":"Expérience​","type":1,"pageTitle":"Présentation de soi.","url":"/blog/about/about_fr#expérience","content":" 2017 - 2020, Premier Lycée de Bozhou, Bozhou Anhui2020 - 2024, Collège d'informatique et de technologie, Université de Jilin, Changchun Jilin2024 - , École d'informatique et d'ingénierie, Sun Yat-sen University, Guangzhou Guangdong  ","version":null,"tagName":"h2"},{"title":"Projets​","type":1,"pageTitle":"Présentation de soi.","url":"/blog/about/about_fr#projets","content":" Émulateur basé sur RISC-VRobot de prélèvement intelligent utilisant YOLOv5Certains Github Repositories HeartbeatCoursea  ","version":null,"tagName":"h2"},{"title":"Récompenses et Honneurs​","type":1,"pageTitle":"Présentation de soi.","url":"/blog/about/about_fr#récompenses-et-honneurs","content":" (Mise à jour le 29, Août, 2023)  2020 - 2021, Bourse de deuxième classe, Université de Jilin2021 - 2022, Bourse de troisième classe, Université de Jilin2021 - 2022, Excellent étudiant universitaire, Université de Jilin2023, Concours national de conception IoT, Premier Prix de la Région Nord-Est, Deuxième Prix de la Finale Nationale  ","version":null,"tagName":"h2"},{"title":"Compétence​","type":1,"pageTitle":"Présentation de soi.","url":"/blog/about/about_fr#compétence","content":" Bon niveau d'anglais, avoir réussi les CET-4 et CET-6 avec d'excellentes notes et savoir lire couramment la littérature étrangère.Familier avec C, C++, Java, Python, Kotlin, Swift, Go et d'autres langages de programmation, avec une bonne capacité de programmation.Familier avec HTML, CSS, JavaScript, Node.js, Vue, Bootstrap et d'autres technologies, capable de créer de manière indépendante des pages Web.Capable de développer de manière indépendante des applications iOS/iPadOS/macOS et Android.Etude approfondie des logiciels et du matériel, familiarisé avec le développement embarqué.  ","version":null,"tagName":"h2"},{"title":"Loisirs​","type":1,"pageTitle":"Présentation de soi.","url":"/blog/about/about_fr#loisirs","content":" Apprendre des langues. Quand je suis libre, apprendre différentes langues est une merveilleuse façon de gagner du temps, Français, Русский, Español... ce sont mes préférées.Peinture. Juste pour le fun :P.En lisant. Kafka et Woolf sont parmi mes auteurs préférés. Bien que parfois je ne comprenne pas entièrement leur travail brillant, cela me rend encore plus captivé.Concevez toutes sortes de choses intéressantes, insistez pour créer des choses extraordinaires avec des matériaux ordinaires et exprimez des émotions avec des couleurs.La photographie. Enregistrement de chaque instant de la vie normale avec caméra.  ","version":null,"tagName":"h2"},{"title":"Ma Création :)​","type":1,"pageTitle":"Présentation de soi.","url":"/blog/about/about_fr#ma-création-","content":" Voici la première œuvre que j'ai peinte il y a plusieurs années.    Et c'est une fleur de cactus chez moi.   ","version":null,"tagName":"h3"},{"title":"關於我自己","type":0,"sectionRef":"#","url":"/blog/about/about_tcn","content":"","keywords":"","version":null},{"title":"你好！​","type":1,"pageTitle":"關於我自己","url":"/blog/about/about_tcn#你好","content":" 歡迎訪問我嘅個人主頁，我都非常榮幸能夠同你咁有趣嘅靈魂在此相遇。  ","version":null,"tagName":"h2"},{"title":"學習經歷​","type":1,"pageTitle":"關於我自己","url":"/blog/about/about_tcn#學習經歷","content":" 2017 - 2020，高中，安徽省亳州市第一中學2020 - 2024，本科，吉林大學計算機科學與技術學院2024 - ，研究生在讀，中山大學計算機學院  ","version":null,"tagName":"h2"},{"title":"參與項目​","type":1,"pageTitle":"關於我自己","url":"/blog/about/about_tcn#參與項目","content":" RISC-V 指令集軟件仿真基於 YOLOv5 嘅智能撿拾機械人我自己嘅 Repositories HeartbeatCoursea  ","version":null,"tagName":"h2"},{"title":"所獲榮譽​","type":1,"pageTitle":"關於我自己","url":"/blog/about/about_tcn#所獲榮譽","content":" （截止至 2023 年 8 月）  2020 - 2021，吉林大學三等獎學金2021 - 2022，吉林大學二等獎學金2021 - 2022，吉林大學計算機科學與技術學院院優秀學生2023，全國大學生物聯網設計競賽，東北賽區一等獎，全國總決賽二等獎  ","version":null,"tagName":"h2"},{"title":"個人能力​","type":1,"pageTitle":"關於我自己","url":"/blog/about/about_tcn#個人能力","content":" 英語水平良好，四六級均以優秀成績通過，正在備考 TOEFL，能夠流暢地閱讀外文文獻。熟悉 C，C++，Java，Python，Kotlin，Swift，Go 等編程語言，有良好的編程能力。熟悉 HTML，CSS，JavaScript，Node.js，Vue，Bootstrap 等技術，能夠獨立搭建網頁。有一定的開發經驗，能夠獨立開發 iOS/iPadOS/macOS 和 Android 應用程序。廣泛接觸軟硬件，基礎較為紮實，熟悉嵌入式開發。  ","version":null,"tagName":"h2"},{"title":"興趣愛好​","type":1,"pageTitle":"關於我自己","url":"/blog/about/about_tcn#興趣愛好","content":" 語言學習。空餘時間會學習各種有趣嘅語言，例如 Français，Русский，Español 等語言。繪畫（約等於~亂畫）。冇系統咁學過相關知識，就係想畫啥畫啥。閱讀文學。Kafka 同 Woolf 係我最鍾意嘅作家之一，雖然有時候睇唔係幾明，但係更令我癡迷不已。設計各種有意思嘅嘢，執著于用平凡嘅材料創造出不平凡嘅嘢，用顏色表達情感。攝影。用相機記錄的每一個值得回憶嘅瞬間。  ","version":null,"tagName":"h2"},{"title":"個人作品 :)​","type":1,"pageTitle":"關於我自己","url":"/blog/about/about_tcn#個人作品-","content":" 係幾年前我畫嘅第一幅畫。  係我屋企仙人掌開嘅花。   ","version":null,"tagName":"h3"},{"title":"关于我自己","type":0,"sectionRef":"#","url":"/blog/about/about_cn","content":"","keywords":"","version":null},{"title":"你好！​","type":1,"pageTitle":"关于我自己","url":"/blog/about/about_cn#你好","content":" 欢迎访问我的个人主页，我也非常荣幸能够同你这样有趣的灵魂在此相遇。  ","version":null,"tagName":"h2"},{"title":"学习经历​","type":1,"pageTitle":"关于我自己","url":"/blog/about/about_cn#学习经历","content":" 2017 - 2020，高中，安徽省亳州市第一中学2020 - 2024，本科，吉林大学计算机科学与技术学院2024 - ，研究生在读，中山大学计算机学院  ","version":null,"tagName":"h2"},{"title":"参与项目​","type":1,"pageTitle":"关于我自己","url":"/blog/about/about_cn#参与项目","content":" RISC-V 指令集软件仿真基于 YOLOv5 的智能捡拾机器人我自己的 Repositories HeartbeatCoursea  ","version":null,"tagName":"h2"},{"title":"所获荣誉​","type":1,"pageTitle":"关于我自己","url":"/blog/about/about_cn#所获荣誉","content":" （截止至 2023 年 8 月）  2020 - 2021，吉林大学三等奖学金2021 - 2022，吉林大学二等奖学金2021 - 2022，吉林大学计算机科学与技术学院院优秀学生2023，全国大学生物联网设计竞赛，东北赛区一等奖，全国总决赛二等奖  ","version":null,"tagName":"h2"},{"title":"个人能力​","type":1,"pageTitle":"关于我自己","url":"/blog/about/about_cn#个人能力","content":" 英语水平良好，四六级均以优秀成绩通过，正在备考 TOEFL，能够流畅地阅读外文文献。熟悉 C，C++，Java，Python，Kotlin，Swift，Go 等编程语言，有良好的编程能力。熟悉 HTML，CSS，JavaScript，Node.js，Vue，Bootstrap 等技术，能够独立搭建网页。有一定的开发经验，能够独立开发 iOS/iPadOS/macOS 和 Android 应用程序。广泛接触软硬件，基础较为扎实，熟悉嵌入式开发。  ","version":null,"tagName":"h2"},{"title":"兴趣爱好​","type":1,"pageTitle":"关于我自己","url":"/blog/about/about_cn#兴趣爱好","content":" 语言学习。空余时间会学习各种有趣的语言，例如 Français，Русский，Español 等语言。绘画（约等于～乱画）。没有系统地学过相关知识，就是想画啥画啥。阅读文学。Kafka 和 Woolf 是我最喜欢的作家之一，虽然有时候看不太懂，但是更让我痴迷不已。设计各种有意思的东西，执着于用平凡的材料创造出不平凡的事物，用颜色表达情感。摄影。用相机记录下每一个值得回忆的瞬间。  ","version":null,"tagName":"h2"},{"title":"我的小作品 :)​","type":1,"pageTitle":"关于我自己","url":"/blog/about/about_cn#我的小作品-","content":" 这是几年前我画的第一幅画。    这是我家仙人掌开的花。   ","version":null,"tagName":"h3"},{"title":"About Me","type":0,"sectionRef":"#","url":"/blog/about/about_en","content":"","keywords":"","version":null},{"title":"Hello!​","type":1,"pageTitle":"About Me","url":"/blog/about/about_en#hello","content":" Welcome to my personal homepage, and I'm glad to meet such an interesting soul as you.  ","version":null,"tagName":"h2"},{"title":"Experience​","type":1,"pageTitle":"About Me","url":"/blog/about/about_en#experience","content":" 2017 - 2020, No.1 High School of Bozhou, Bozhou Anhui2020 - 2024, College of Computer Science and Technology, Jilin University, Changchun Jilin2024 - , School of Computer Science and Engineering, Sun Yat-sen University, Guangzhou Guangdong  ","version":null,"tagName":"h2"},{"title":"Projects​","type":1,"pageTitle":"About Me","url":"/blog/about/about_en#projects","content":" Emulator based on RISC-VIntelligent picking robot using YOLOv5Some repositories HeartbeatCoursea  ","version":null,"tagName":"h2"},{"title":"Awards​","type":1,"pageTitle":"About Me","url":"/blog/about/about_en#awards","content":" (Updated on 29, August, 2023)  2020 - 2021, Second Class Scholarship, Jilin University2021 - 2022, Third Class Scholarship, Jilin University2021 - 2022, College Excellent Student, Jilin University2023, National IoT Design Competition, First Prize of Northeast Region, Second Prize of National Finals  ","version":null,"tagName":"h2"},{"title":"Competence​","type":1,"pageTitle":"About Me","url":"/blog/about/about_en#competence","content":" Good level of English, passed CET-4 and CET-6 with excellent grades, and can read foreign literature fluently.Familiar with C, C++, Java, Python, Kotlin, Swift, Go and other programming languages, with good programming ability.Familiar with HTML, CSS, JavaScript, Node.js, Vue, Bootstrap and other technologies, able to independently build web pages.Able to independently develop iOS/iPadOS/macOS and Android applications.Extensive study of software and hardware, familiar with embedded development.  ","version":null,"tagName":"h2"},{"title":"Hobbies​","type":1,"pageTitle":"About Me","url":"/blog/about/about_en#hobbies","content":" Learning languages. When I'm free, learning different languages is a wonderful way to consume time, Français, Русский, Español... those are my favorites.Painting. Just for fun :P.Reading. Kafka and Woolf are among my favorite authors. Although sometimes I don't fully understand their brilliant work, it makes me even more engrossed.Design all kinds of interesting things, insist on creating extraordinary things with ordinary materials, and express emotions with colors.Photography. Recording every moment of normal life with camera.  ","version":null,"tagName":"h2"},{"title":"My Works :)​","type":1,"pageTitle":"About Me","url":"/blog/about/about_en#my-works-","content":" Here is the first work I painted several years ago.    And this is a flower of cactus in my home.   ","version":null,"tagName":"h3"},{"title":"Lesson 1","type":0,"sectionRef":"#","url":"/docs/Computer Architecture/Lesson 1","content":"Lesson 1","keywords":"","version":"Next"},{"title":"Heading 1","type":0,"sectionRef":"#","url":"/docs/Functional Analysis/test2","content":"test2 Heading 1 Quote This is inline math expression: y=x2y=x^2y=x2. This is math expression: ϵ=hv˙\\epsilon=h\\dot vϵ=hv˙","keywords":"","version":"Next"},{"title":"Glossary","type":0,"sectionRef":"#","url":"/docs/Linear Algebra/Glossary","content":"","keywords":"","version":"Next"},{"title":"V​","type":1,"pageTitle":"Glossary","url":"/docs/Linear Algebra/Glossary#v","content":" vector space, a vector space is a set with operations of addition and scalar multiplication that satisfy natural algebraic properties. ","version":"Next","tagName":"h2"},{"title":"Notation","type":0,"sectionRef":"#","url":"/docs/Linear Algebra/Notation","content":"","keywords":"","version":"Next"},{"title":"Notation​","type":1,"pageTitle":"Notation","url":"/docs/Linear Algebra/Notation#notation","content":"   The following table shows the notations and their meanings used in the book Linear Algebra Done Right[1] written by Sheldon Axler.  Notation\tExplanationRn\\mathbf R^nRn\t    ","version":"Next","tagName":"h2"},{"title":"Reference​","type":1,"pageTitle":"Notation","url":"/docs/Linear Algebra/Notation#reference","content":" 1. S. Axler, Linear Algebra Done Right. Springer International Publishing, 2024. doi: 10.1007/978-3-031-41026-0. ","version":"Next","tagName":"h2"},{"title":"Heading 1","type":0,"sectionRef":"#","url":"/docs/Mathematical Analysis/test2","content":"test2 Heading 1 Quote This is inline math expression: y=x2y=x^2y=x2. This is math expression: ϵ=hv˙\\epsilon=h\\dot vϵ=hv˙","keywords":"","version":"Next"},{"title":"Heading 1","type":0,"sectionRef":"#","url":"/docs/Functional Analysis/test1","content":"test1 Heading 1 Quote This is inline math expression: y=x2y=x^2y=x2. This is math expression: ϵ=hv˙\\epsilon=h\\dot vϵ=hv˙","keywords":"","version":"Next"},{"title":"Heading 1","type":0,"sectionRef":"#","url":"/docs/Mathematical Analysis/test1","content":"test1 Heading 1 Quote This is inline math expression: y=x2y=x^2y=x2. This is math expression: ϵ=hv˙\\epsilon=h\\dot vϵ=hv˙","keywords":"","version":"Next"},{"title":"Definition","type":0,"sectionRef":"#","url":"/docs/Linear Algebra/Definition","content":"","keywords":"","version":"Next"},{"title":"Complex Numbers​","type":1,"pageTitle":"Definition","url":"/docs/Linear Algebra/Definition#complex-numbers","content":" We assume the root of −1-1−1 is iii, (i2=−1i^2=-1i2=−1), which obeys the usual rules of arithmetic.  A complex number is an ordered pair (a,b)(a,b)(a,b), where a,b∈Ra, b \\in Ra,b∈R, but we will write this as a+bia+bia+bi. The set of all complex numbers is denoted by C\\mathbf{C}C: C={a+bi:a,b∈R}\\mathbf{C}=\\{a+bi:a,b\\in \\mathbf{R}\\}C={a+bi:a,b∈R} Addition and multiplication on C\\mathbf{C}C are defined by (a+bi)+(c+di)=(a+c)+(b+d)i,(a+bi)+(c+di)=(a+c)+(b+d)i,(a+bi)+(c+di)=(a+c)+(b+d)i,(a+bi)(c+di)=(ac−bd)+(ad+bc)i;(a+bi)(c+di)=(ac-bd)+(ad+bc)i;(a+bi)(c+di)=(ac−bd)+(ad+bc)i; here a,b,c,d∈Ra,b,c,d\\in \\mathbf{R}a,b,c,d∈R.  Notation\tExplanationR\\mathbf RR\tA set of real numbers. ","version":"Next","tagName":"h2"},{"title":"Lesson 2","type":0,"sectionRef":"#","url":"/docs/Computer Architecture/Lesson 2","content":"Lesson 2 CPU time for a program can be expressed in two ways: TCPU=Nclock cycles×Tclock cycleT_{CPU}=N_{clock\\;cycles}\\times T_{clock\\;cycle}TCPU​=Nclockcycles​×Tclockcycle​TCPU=Nclock cyclesClock rateT_{CPU}=\\dfrac{N_{clock\\;cycles}}{Clock\\;rate}TCPU​=ClockrateNclockcycles​​ TCPUT_{CPU}TCPU​: CPU time Nclock cyclesN_{clock\\;cycles}Nclockcycles​: Clock cycles for a program Tclock cycleT_{clock\\;cycle}Tclockcycle​: Clock cycle time","keywords":"","version":"Next"},{"title":"Automata: The Methods and the Madness","type":0,"sectionRef":"#","url":"/docs/Automata Theory/Automata: The Methods and the Madness","content":"","keywords":"","version":"Next"},{"title":"Why Study Automata Theory?​","type":1,"pageTitle":"Automata: The Methods and the Madness","url":"/docs/Automata Theory/Automata: The Methods and the Madness#why-study-automata-theory","content":" ","version":"Next","tagName":"h2"},{"title":"Introduction to Finite Automata​","type":1,"pageTitle":"Automata: The Methods and the Madness","url":"/docs/Automata Theory/Automata: The Methods and the Madness#introduction-to-finite-automata","content":" Automata theory is the study of abstract computing devices or &quot;machines&quot;.  Finite automata are a useful model for many important kinds of hardware and software.  Software for designing and checking the behavior of digital circuits.The &quot;lexical analyzer&quot; of a typical compiler, that is, the compiler component that breaks the input text into logical units, such as identifiers, keywords, and punctuation.Software for scanning large bodies of text, such as collections of Web pages, to find occurrences of words, phrases,or other patterns.Software for verifying systems of all types that have a finite number of distinct states, such as communications protocols or protocols for secure exchange of information.  Perhaps the simplest nontrivial finite automaton is an on/off switch (Figure 1).  Figure 1. A simple finite automaton.  Figure 2 shows another finite automaton that could be part of a lexical analyzer. The job of this automaton is to recognize the keyword then. It thus needs five states, each of which represents a different position in the word then that has been reached so far. These positions correspond to the prefixes of the word, ranging from the empty string (i.e., nothing of the word has been seen so far) to the complete word. We could consider the state &quot;then&quot; as accepting state.  Figure 2. A finite automaton modeling recognition of then.  ","version":"Next","tagName":"h3"},{"title":"Structural Representations​","type":1,"pageTitle":"Automata: The Methods and the Madness","url":"/docs/Automata Theory/Automata: The Methods and the Madness#structural-representations","content":" There are two important notations that are not automaton-like, but play an important role in the study of automata and their applications.  Grammars are useful models when designing software that processes data with a recursive structure. The best-known example is a &quot;parser&quot;, the component of a compiler that deals with the recursively nested features of the typical programming language, such as expressions-arithmetic, conditional, and so on. For instance,a grammatical rule like E⇒E+EE\\Rightarrow E+EE⇒E+E states that an expression can be formed by taking any two expressions and connecting them by a plus sign; this rule is typical of how expressions of real programming languages are formed. Later, we'll introduce context-free grammars, as they are usually called.Regular Expressions also denote the structure of data, especially text strings. The patterns of strings they describe are exactly the same as what can be described by finite automata. The style of these expressions differs significantly from that of grammars, and we shall content ourselves with a simple example here. The UNIX-style regular expression [A-Z][a-z]*[ ][A-Z][A-Z], represents capitalized words followed by a space and two capital letters. This expression represents patterns in text that could be a city and state, e.g., Ithaca NY. It misses multiword city names, such as Palo Alto CA, which could be captured by the more complex expression [A-Z][a-z]*([ ][A-Z] [a-z]*)*[ ][A-Z][A-Z].  ","version":"Next","tagName":"h3"},{"title":"Automata and Complexity​","type":1,"pageTitle":"Automata: The Methods and the Madness","url":"/docs/Automata Theory/Automata: The Methods and the Madness#automata-and-complexity","content":" Automata are essential for the study of the limits of computation. As we mentioned in the introduction to the chapter, there are two important issues:  What can a computer do at all? This study is called &quot;decidability,&quot; and the problems that can be solved by computer are called &quot;decidable.&quot;What can a computer do efficiently? This study is called &quot;intractability,&quot; and the problems that can be solved by a computer using no more time than some slowly growing function of the size of the input are called &quot;tractable.&quot; Often,we take all polynomial functions to be &quot;slowly growing,&quot; while functions that grow faster than any polynomial are deemed to grow too fast.  ","version":"Next","tagName":"h3"},{"title":"Introduction to Formal Proof​","type":1,"pageTitle":"Automata: The Methods and the Madness","url":"/docs/Automata Theory/Automata: The Methods and the Madness#introduction-to-formal-proof","content":" Perhaps more than other core subjects of computer science, automata theory lends itself to natural and interesting proofs, both of the deductive kind (a sequence of justified steps) and the inductive kind (recursive proofs of a parameterized statement that use the statement itself with &quot;lower&quot; values of the parameter).  ","version":"Next","tagName":"h2"},{"title":"Deductive Proofs​","type":1,"pageTitle":"Automata: The Methods and the Madness","url":"/docs/Automata Theory/Automata: The Methods and the Madness#deductive-proofs","content":" A deductive proof consists of a sequence of statements whose truth leads us from some initial statement, called the hypothesis or the given statement(s), to a conclusion statement. Each step in the proof must follow, by some accepted logical principle, from either the given facts, or some of the previous statements in the deductive proof, or a combination of these.  The hypothesis may be true or false, typically depending on values of its parameters. Often, the hypothesis consists of several independent statements connected bya logical AND. In those cases, we talk of each of these statements as a hypothesis, or as a given statement.  The theorem that is proved when we go from a hypothesis HHH to a conclusion CCC is the statement &quot;if HHH then CCC.&quot; We say that CCC is deduced from HHH.  ","version":"Next","tagName":"h3"},{"title":"Reduction to Definitions​","type":1,"pageTitle":"Automata: The Methods and the Madness","url":"/docs/Automata Theory/Automata: The Methods and the Madness#reduction-to-definitions","content":" In many other theorems, including many from automata theory, the terms used in the statement may have implications that are less obvious.  tip If you are not sure how to start a proof, convert all terms in the hypothesis to their definitions.  Here is an example of a theorem that is simple to prove once we have expressed its statement in elementary terms. It uses the following two definitions:  A set SSS is finite if there exists an integer nnn such that SSS has exactly nnn elements in a set SSS. We write ∥S∥=n\\| S\\|=n∥S∥=n, where ∥S∥\\|S\\|∥S∥ is used to denote the number of elements in a set SSS. If the set SSS is not finite, we say SSS is infinite. Intuitively, an infinite set is a set that contains more than any integer number of elements.If SSS and TTT are both subsets of some set UUU, then TTT is the complement of SSS (with respect to UUU) if S∪T=US\\cup T=US∪T=U and S∩T=∅S\\cap T=\\emptysetS∩T=∅. That is, each element of UUU is in exactly those elements off UUU that are not in SSS.  Definition of Set A set is a well-defined collection of distinct objects.x=yx=yx=y Theorem  ","version":"Next","tagName":"h3"},{"title":"Reference​","type":1,"pageTitle":"Automata: The Methods and the Madness","url":"/docs/Automata Theory/Automata: The Methods and the Madness#reference","content":" 1. J. E. Hopcroft, R. Motwani, and J. D. Ullman, Introduction to automata theory, languages, and computation, 2nd edition, vol. 32, no. 1. New York, NY, USA: ACM Press, 2001, pp. 60--65. ","version":"Next","tagName":"h2"}],"options":{"language":["en","zh"],"highlightResult":true,"id":"default"}}